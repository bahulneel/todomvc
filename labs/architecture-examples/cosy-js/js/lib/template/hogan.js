// Generated by CoffeeScript 1.3.3
(function() {
  'use strict';

  var HoganTemplate, assertObj, assertStr, assertTmpl, extend, hogan, isTmpl, renderTmpl, template, tmpl;

  assertObj = require('../core/native/object').assertObj;

  assertStr = require('../core/native/string').assertStr;

  extend = require('../core/protocol').extend;

  hogan = require('hogan.js');

  template = require('../protocol/template');

  HoganTemplate = (function() {

    function HoganTemplate(templateString) {
      assertStr(templateString, 'Invalid template string');
      this.template = hogan.compile(templateString);
    }

    return HoganTemplate;

  })();

  tmpl = function(templateString) {
    return new HoganTemplate(templateString);
  };

  isTmpl = function(value) {
    return value instanceof HoganTemplate;
  };

  assertTmpl = function(value) {
    if (!(isTmpl(value))) {
      throw new Error('Invalid template');
    }
    return value;
  };

  renderTmpl = function(template, context) {
    assertObj(context, 'Invalid context');
    return (assertTmpl(template)).template.render(context);
  };

  extend(template, isTmpl, {
    render: function(template, context) {
      return renderTmpl(template, context);
    }
  });

  module.exports = {
    tmpl: tmpl,
    isTmpl: isTmpl,
    renderTmpl: renderTmpl
  };

}).call(this);
