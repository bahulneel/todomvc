// Generated by CoffeeScript 1.3.3
(function() {
  'use strict';

  var append, children, first, get, goto, map, parents, remove, set, siblings, swap, val, value, _ref, _ref1;

  map = require('../protocol/map');

  first = require('../protocol/list').first;

  _ref = require('../protocol/element'), parents = _ref.parents, siblings = _ref.siblings, append = _ref.append, remove = _ref.remove, children = _ref.children, value = _ref.value;

  _ref1 = require('../protocol/mutable'), get = _ref1.get, set = _ref1.set;

  swap = function(frame) {
    var from, node, parent, to;
    node = map.get(frame, "__node");
    parent = first(parents(node, "*"));
    from = siblings(node, "*");
    to = get(node);
    set(node, from);
    append(parent, to);
    return frame;
  };

  val = function(frame) {
    var node;
    node = map.get(frame, "__node");
    return value(node);
  };

  goto = function(frame, location) {};

  module.exports = {
    swap: swap,
    val: val
  };

}).call(this);
