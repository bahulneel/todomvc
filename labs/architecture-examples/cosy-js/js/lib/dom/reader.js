// Generated by CoffeeScript 1.3.3
(function() {
  'use strict';

  var css, filter, first, isParent, map, matches, parents, read, _ref, _ref1;

  _ref = require('../protocol/element'), css = _ref.css, parents = _ref.parents, matches = _ref.matches;

  _ref1 = require('../core/list'), filter = _ref1.filter, map = _ref1.map;

  first = require('../protocol/list').first;

  isParent = function(node, element, selector) {
    var cand;
    if (element == null) {
      return false;
    }
    cand = first(parents(element, selector));
    if (cand != null) {
      return node[0] === cand[0];
    } else {
      return true;
    }
  };

  read = function(node, selector) {
    var children;
    if (node === null) {
      return null;
    } else {
      children = map((function(element) {
        return read(element, selector);
      }), filter((function(element) {
        return isParent(node, element, selector);
      }), css(node, selector)));
      return {
        node: node,
        children: children
      };
    }
  };

  module.exports = {
    read: read
  };

}).call(this);
