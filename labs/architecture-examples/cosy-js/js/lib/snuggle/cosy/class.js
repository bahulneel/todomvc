// Generated by CoffeeScript 1.3.3
(function() {
  'use strict';

  var classControl, cosyClass, evaluate, isFn, use, _ref,
    __slice = [].slice;

  isFn = require('../../core/native/function').isFn;

  _ref = require('../../core/evaluator'), evaluate = _ref.evaluate, use = _ref.use;

  classControl = function(constructor) {
    return function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if (this.isInitialising) {
        this.isInitialising = false;
        return this.frame["this"] = (function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor, result = func.apply(child, args), t = typeof result;
          return t == "object" || t == "function" ? result || child : child;
        })(constructor, [this].concat(__slice.call(args)), function(){});
      } else if (isFn(this.update)) {
        return this.update.apply(this, args);
      }
    };
  };

  cosyClass = function() {
    var args, constructor, control, frame;
    frame = arguments[0], constructor = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
    control = classControl(constructor);
    return frame.control.apply(frame, [frame, control].concat(__slice.call(args)));
  };

  cosyClass.raw = /^&?[%@].+$/;

  module.exports = cosyClass;

}).call(this);
