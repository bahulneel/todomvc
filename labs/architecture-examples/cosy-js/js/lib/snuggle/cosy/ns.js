// Generated by CoffeeScript 1.3.3
(function() {
  'use strict';

  var findNs, first, isStr, ns, rest, use, vec, _ref;

  isStr = require('../../core/native/string').isStr;

  vec = require('../../core/list').vec;

  _ref = require('../../protocol/list'), first = _ref.first, rest = _ref.rest;

  use = require('../../core/evaluator').use;

  findNs = function(frame, name, parent) {
    var parts;
    if (frame[name] != null) {
      frame[name].__parentNS = parent;
      return frame[name];
    } else {
      parts = name.split(/[.]/);
      if (frame[first(parts)] != null) {
        frame[first(parts)].__parentNS = parent;
        return findNs(use(frame, frame[first(parts)]), (vec(rest(parts))).join('.'), frame[first(parts)]);
      } else {
        throw new Error('Namespace ' + name + ' not found');
      }
    }
  };

  ns = function(frame, name) {
    var importNs;
    if (isStr(name)) {
      importNs = findNs(frame, name);
    } else {
      importNs = name;
    }
    return use(frame, importNs);
  };

  module.exports = ns;

}).call(this);
