// Generated by CoffeeScript 1.3.3
(function() {
  'use strict';

  var copy, coreWatchRef, get, notify, set, unwatchRef, watch, watchRef, _ref, _ref1;

  _ref = require('../../protocol/mutable'), set = _ref.set, get = _ref.get;

  _ref1 = require('../../core/reference'), coreWatchRef = _ref1.watchRef, unwatchRef = _ref1.unwatchRef;

  copy = function(src, tgt) {
    return set(tgt, get(src));
  };

  notify = function(ref) {
    return copy(ref, ref);
  };

  watch = function(watchedRef, watchFn) {
    return watchRef.call(this, watchedRef, function() {
      return watchFn(get(watchedRef));
    });
  };

  watchRef = function(watchedRef, watchFn) {
    this.destructors.push(function() {
      return unwatchRef(watchedRef, watchFn);
    });
    return coreWatchRef(watchedRef, watchFn);
  };

  module.exports = {
    set: set,
    get: get,
    copy: copy,
    notify: notify,
    watch: watch,
    watchRef: watchRef
  };

}).call(this);
