// Generated by CoffeeScript 1.3.3
(function() {
  'use strict';

  var children, eventFn, filter, formTags, getForm, hashMap, into, isFormElement, map, reduce, reset, submit, toObject, _ref,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  children = require('../../protocol/element').children;

  _ref = require('../../core/list'), filter = _ref.filter, map = _ref.map, reduce = _ref.reduce;

  into = require('../../protocol/list').into;

  hashMap = require('../../core/hashMap').hashMap;

  formTags = ["input", "select", "textarea", "button"];

  isFormElement = function(element) {
    var hasName, _ref1;
    if (element[0] == null) {
      return false;
    }
    hasName = (element.attr('name')) || (element.attr('id'));
    return (_ref1 = element[0].tagName.toLowerCase(), __indexOf.call(formTags, _ref1) >= 0) && hasName;
  };

  getForm = function(element) {
    if (element == null) {
      element = this.element;
    }
    if (element.is('form')) {
      return element;
    }
    return (element.find('form')).eq(0);
  };

  eventFn = function(fn) {
    return function(event) {
      return fn({
        event: event,
        element: $(event.target),
        stop: function() {
          return event.preventDefault();
        }
      });
    };
  };

  submit = function(fn, element) {
    var form;
    form = getForm.call(this, element);
    return form.submit(eventFn(fn));
  };

  reset = function(fn, element) {
    var form;
    form = getForm.call(this, element);
    return form.on('reset', eventFn(fn));
  };

  toObject = function(element) {
    var mapElement;
    if (element == null) {
      element = this.element;
    }
    mapElement = function(elem) {
      var name, obj;
      obj = {};
      name = (elem.attr('name')) || (elem.attr('id'));
      obj[name] = elem.val();
      return hashMap(obj);
    };
    return reduce(into, map(mapElement, filter(isFormElement, map($, (element.find(formTags.join(', '))).toArray()))));
  };

  module.exports = {
    submit: submit,
    reset: reset,
    toObject: toObject,
    getForm: getForm
  };

}).call(this);
